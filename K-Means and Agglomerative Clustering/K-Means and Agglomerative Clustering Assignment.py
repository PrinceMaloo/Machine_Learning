# -*- coding: utf-8 -*-
"""LAB6_B21CH025

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JnO76M7Lp68gsMguBuvwmiIMvCt3SwUC
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt 
import seaborn as sns
from sklearn.cluster import KMeans

# Q_1(a)
df = pd.read_csv("/content/drive/MyDrive/IML Lab/wine.data", header=None)
df

df.isnull().sum()

x = df.iloc[:,[2,3,6]].values
x

df.info()

sns.set_style("whitegrid")
sns.pairplot(df,size=3);
plt.show()

sns.set_style("whitegrid")
sns.pairplot(df,hue = 6,size=3);
plt.show()

# Q_1(b)
from sklearn.cluster import KMeans
kmeans = KMeans(n_clusters=4, max_iter = 300, n_init = 10, random_state = 50)
y_predict = kmeans.fit_predict(x)

plt.figure(figsize=(10,5))
plt.scatter(x[y_predict == 0, 0], x[y_predict == 0, 1], s = 100, c = 'red', label = 'cluster1')
plt.scatter(x[y_predict == 1, 0], x[y_predict == 1, 1], s = 100, c = 'blue', label = 'cluster2')
plt.scatter(x[y_predict == 2, 0], x[y_predict == 2, 1], s = 100, c = 'green', label = 'cluster3')
plt.scatter(x[y_predict == 3, 0], x[y_predict == 3, 1], s = 100, c = 'yellow', label = 'cluster4')


plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:,1], s = 300, c = 'black', label = 'Centroids')

plt.legend()

# Q_1(c)
df

x = df.iloc[:,[1,5,13]].values
x

from sklearn.cluster import KMeans
wcss_list = []
for i in range(1,11):
  kmeans = KMeans(n_clusters=i, init='k-means++', random_state= 45)  
  kmeans.fit(x)  
  wcss_list.append(kmeans.inertia_)  
plt.plot(range(1, 11), wcss_list)  
plt.title('The Elobw Method Graph')  
plt.xlabel('Number of clusters(k)')  
plt.ylabel('wcss_list')  
plt.show()

from sklearn.cluster import KMeans
kmeans = KMeans(n_clusters=2, max_iter = 300, n_init = 10, random_state = 40)
y_predict = kmeans.fit_predict(x)

plt.figure(figsize=(10,5))
plt.scatter(x[y_predict == 0, 0], x[y_predict == 0, 1], s = 100, c = 'red', label = 'cluster1')
plt.scatter(x[y_predict == 1, 0], x[y_predict == 1, 1], s = 100, c = 'green', label = 'cluster2')

plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:,1], s = 100, c = 'black', label = 'Centroids')

plt.legend()