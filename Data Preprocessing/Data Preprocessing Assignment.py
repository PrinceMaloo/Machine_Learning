# -*- coding: utf-8 -*-
"""Lab2_B21CH025.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/112eYyGcQGggiyVGp6fTQU9s5nPGJKwRy
"""

# Q1 
import pandas as pd
df=pd.read_csv('job_salaries.csv', encoding='windows-1252')
print(df)
 
#job title=nominal variable
#salary=Ratio
#company size=ordinal
df.dtypes

# Q2 and Q3
import pandas as pd
df=pd.read_csv('job_salaries.csv', encoding='windows-1252')
print(df.isnull())


mean1=df['salary'].mean
print(mean1)
df['salary'].fillna(value=mean1,inplace=True)
print(df)

#Q4
from sklearn.preprocessing import OrdinalEncoder
lab = OrdinalEncoder()
import pandas as pd
df=pd.read_csv('job_salaries.csv', encoding='windows-1252')
df1=df.select_dtypes(include=['object']).copy()
df1.head()
pd.get_dummies(df1, columns=['experience_level']).head()

#Q4
from sklearn.preprocessing import OrdinalEncoder
lab = OrdinalEncoder()
import pandas as pd
df=pd.read_csv('job_salaries.csv', encoding='windows-1252')
df1=df.select_dtypes(include=['object']).copy()
df1.head()

pd.get_dummies(df1, columns=['job_title']).head()

#Q4
from sklearn.preprocessing import OrdinalEncoder
lab = OrdinalEncoder()
import pandas as pd
df=pd.read_csv('job_salaries.csv', encoding='windows-1252')
df1=df.select_dtypes(include=['object']).copy()
df1.head()

pd.get_dummies(df1, columns=['company_size']).head()

#Q5
import pandas as pd
import numpy as np
df=pd.read_csv('job_salaries.csv', encoding='windows-1252')
scaled=df.copy()
column='salary'
scaled[column]=scaled[column]/scaled[column].abs().max()
print(scaled)
column='salary_in_usd'
scaled[column]=scaled[column]/scaled[column].abs().max()
print(scaled)

#Q6 b
import pandas as pd
from sklearn.model_selection import train_test_split
df=pd.read_csv('job_salaries.csv', encoding='windows-1252')
train, val, test = np.split(df.sample(frac=1), [int(.7*len(df)),
int(.8*len(df))])
print(train)
print(test)
print(val)

#Q6 a
import pandas as pd
import numpy as np
import math
df=pd.read_csv('job_salaries.csv', encoding='windows-1252')
train, val, test = np.split(df.sample(frac=1), [int(.7*len(df)), int(.9*len(df))])

print(train)
print(test)
print(val)