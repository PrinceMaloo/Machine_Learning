# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UvP3CJ46PUvpJpcF5aHUnqd07RGrrCgg
"""

#Q_1(a)
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from collections import Counter
from sklearn.metrics import accuracy_score
from sklearn.tree import DecisionTreeClassifier
from pandas.plotting import scatter_matrix

my_data= pd.read_csv('C:\\Users\\iammo\\Downloads\\penguins_lter.csv - penguins_lter (1).csv')  # read the file using pandas library.
my_data.head()

my_data.info()

my_data.shape  

my_data.hist( bins=50, figsize=(15,15))

scatter_matrix(my_data, figsize=(10,12))

mean1=int(my_data['Culmen Depth (mm)'].mean())   # method to take care of the Nan/Null values , i replace those with mode and mean 
mean2=int(my_data['Culmen Length (mm)'].mean())  
mean3=int(my_data['Flipper Length (mm)'].mean())  
mean4=int(my_data['Body Mass (g)'].mean())
mode=my_data['Sex'].mode()
my_data['Culmen Depth (mm)']=my_data['Culmen Depth (mm)'].fillna(mean1)
my_data['Culmen Depth (mm)']
my_data['Culmen Length (mm)']=my_data['Culmen Length (mm)'].fillna(mean2)
my_data['Flipper Length (mm)']=my_data['Flipper Length (mm)'].fillna(mean3)
my_data['Body Mass (g)']=my_data['Body Mass (g)'].fillna(mean4)
my_data['Sex']=my_data['Sex'].fillna(mode)
print(my_data)

my_data.describe()

#(b)
for columns in my_data.columns:
  print(columns)

print('\n\n\n')
for attribute in ['Species', 'Island', 'Sex','Island','Region']:
  fig,ax=plt.subplots()
  my_data[attribute].value_counts().plot(ax=ax,kind='pie')

#(c)
from sklearn.model_selection import train_test_split
train_set, val_plus_test_set = train_test_split(my_data, test_size=0.3, random_state=42)
val_set, test_set = train_test_split(my_data, test_size=0.333, random_state=42)

X_train= train_set[['Culmen Length (mm)', 'Culmen Depth (mm)','Flipper Length (mm)','Body Mass (g)']]
y_train= train_set.loc[:, train_set.columns=='Species']
X_val= val_set[['Culmen Length (mm)', 'Culmen Depth (mm)','Flipper Length (mm)','Body Mass (g)']]
y_val= val_set.loc[:, val_set.columns=='Species']


X_train.head()


tree_clf= DecisionTreeClassifier(criterion='gini', max_depth=5, min_samples_leaf= 2)  # using max_depth=5 and min_samples_leaf=2
tree_clf.fit( X_train, y_train)

y_pred= tree_clf.predict( X_val)

from sklearn.metrics import accuracy_score
print( accuracy_score( y_pred, y_val))


tree_clf= DecisionTreeClassifier(criterion='gini', max_depth=8, min_samples_leaf= 5)  # using max_depth=8 and min_samples_leaf=5
tree_clf.fit( X_train, y_train)

y_pred= tree_clf.predict( X_val)

from sklearn.metrics import accuracy_score
print( accuracy_score( y_pred, y_val))

#(d)
from sklearn import tree
import matplotlib.pyplot as plt


a_1dataset=['Culmen Length (mm)',
    'Culmen Depth (mm)',
    'Flipper Length (mm)',
    'Body Mass (g)']

a_2dataset=['Adelie Penguin (Pygoscelis adeliae)',
    'Gentoo penguin (Pygoscelis papua)',
    'Chinstrap penguin (Pygoscelis antarctica)']
fig, axes = plt.subplots(nrows = 1,ncols = 1,figsize = (6,9), dpi=300)
tree.plot_tree(tree_clf,
               feature_names =a_1dataset, 
               class_names=a_2dataset,
               filled = True)
fig.savefig('penguin_tree.png')